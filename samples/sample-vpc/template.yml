# // Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# // SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: '2010-09-09'
Description: ADF CloudFormation Sample Template (VPC) - Designed to be launched into a region with 3 availability zones
Metadata:
  License: Apache-2.0
Mappings:
  SubnetConfig:
    VPC:
      CIDR: '10.0.0.0/16'
    PublicOne:
      CIDR: '10.0.0.0/24'
    PublicTwo:
      CIDR: '10.0.1.0/24'
    PublicThree:
      CIDR: '10.0.2.0/24'
    PrivateOne:
      CIDR: '10.0.3.0/24'
    PrivateTwo:
      CIDR: '10.0.4.0/24'
    PrivateThree:
      CIDR: '10.0.5.0/24'
Outputs:
  DefaultInternetConnectivitySecurityGroupId:
    Description: The ID of the Internet connectivity security groups
    Export:
      Name:
        Fn::Sub: ${Environment}-private-connectivity-security-group
    Value:
      Ref: DefaultInternetConnectivitySecurityGroup
  PrivateRouteTableId:
    Description: The ID of the Private Route Table
    Export:
      Name:
        Fn::Sub: ${Environment}-private-route-table
    Value:
      Ref: PrivateRouteTable
  PrivateSubnet1a:
    Description: The ID of the Private Subnet 1a
    Export:
      Name:
        Fn::Sub: ${Environment}-private-subnet-1a
    Value:
      Ref: PrivateSubnet1a
  PrivateSubnet1b:
    Description: The ID of the Private Subnet 1b
    Export:
      Name:
        Fn::Sub: ${Environment}-private-subnet-1b
    Value:
      Ref: PrivateSubnet1b
  PrivateSubnet1c:
    Description: The ID of the Private Subnet 1c
    Export:
      Name:
        Fn::Sub: ${Environment}-private-subnet-1c
    Value:
      Ref: PrivateSubnet1c
  PublicRouteTableId:
    Description: The ID of the Public Route Table
    Export:
      Name:
        Fn::Sub: ${Environment}-public-route-table
    Value:
      Ref: PublicRouteTable
  PublicSubnet1a:
    Description: The ID of the Public Subnet 1a
    Export:
      Name:
        Fn::Sub: ${Environment}-public-subnet-1a
    Value:
      Ref: PublicSubnet1a
  PublicSubnet1b:
    Description: The ID of the Public Subnet 1b
    Export:
      Name:
        Fn::Sub: ${Environment}-public-subnet-1b
    Value:
      Ref: PublicSubnet1b
  PublicSubnet1c:
    Description: The ID of the Public Subnet 1c
    Export:
      Name:
        Fn::Sub: ${Environment}-public-subnet-1c
    Value:
      Ref: PublicSubnet1c
  VPC:
    Description: The ID of the main VPC
    Export:
      Name:
        Fn::Sub: ${Environment}-vpc-id
    Value:
      Ref: VPC
Parameters:
  Environment:
    AllowedValues:
      - testing
      - production
    ConstraintDescription: Must be one of the values from the list.
    Description: Environment in which resources are deployed
    Type: String
  CostCenter:
    Description: The Tag used to define the cost center
    Type: String
Resources:
  AttachInternetGateway:
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
    Type: AWS::EC2::VPCGatewayAttachment
  DefaultInternetConnectivitySecurityGroup:
    Properties:
      GroupDescription: Default Internet connectivity Security Group for EC2 instances
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      - CidrIp: 0.0.0.0/0
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-default-internet-sg
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
      VpcId:
        Ref: VPC
    Type: AWS::EC2::SecurityGroup
  EIP:
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  InternetGateway:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
    Type: AWS::EC2::InternetGateway
  NATGateway:
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP
        - AllocationId
      SubnetId:
        Ref: PublicSubnet1a
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: CostCenter
        Value:
          Ref: CostCenter
      - Key: Environment
        Value:
          Ref: Environment
    Type: AWS::EC2::NatGateway
  PrivateRoute:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGateway
      RouteTableId:
        Ref: PrivateRouteTable
    Type: AWS::EC2::Route
  PrivateRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
          Fn::Select:
          - 0
          - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateOne', 'CIDR']
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
  PrivateSubnet1aRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet1a
    Type: AWS::EC2::SubnetRouteTableAssociation
  PrivateSubnet1b:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
          Fn::Select:
          - 1
          - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateTwo', 'CIDR']
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
  PrivateSubnet1bRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet1b
    Type: AWS::EC2::SubnetRouteTableAssociation
  PrivateSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
          Fn::Select:
          - 2
          - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateThree', 'CIDR']
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
  PrivateSubnet1cRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet1c
    Type: AWS::EC2::SubnetRouteTableAssociation
  PublicRoute:
    DependsOn: AttachInternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable
    Type: AWS::EC2::Route
  PublicRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
          Fn::Select:
          - 0
          - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicOne', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
  PublicSubnet1aRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1a
    Type: AWS::EC2::SubnetRouteTableAssociation
  PublicSubnet1b:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
          Fn::Select:
          - 1
          - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicTwo', 'CIDR']
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
  PublicSubnet1bRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1b
    Type: AWS::EC2::SubnetRouteTableAssociation
  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
          Fn::Select:
          - 2
          - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicThree', 'CIDR']
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
  PublicSubnet1cRouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1c
    Type: AWS::EC2::SubnetRouteTableAssociation
  VPC:
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap ['SubnetConfig', 'VPC', 'CIDR']
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-vpc
      - Key: Environment
        Value:
          Ref: Environment
      - Key: CostCenter
        Value:
          Ref: CostCenter
    Type: AWS::EC2::VPC
