# Copyright Amazon.com Inc. or its affiliates.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: '2010-09-09'
Description: ADF CloudFormation Sample Template (VPC) - Designed to be launched into a region with 3 availability zones
Metadata:
  License: Apache-2.0

Mappings:
  SubnetConfig:
    VPC:
      CIDR: '10.0.0.0/16'
    PublicOne:
      CIDR: '10.0.0.0/24'
    PublicTwo:
      CIDR: '10.0.1.0/24'
    PublicThree:
      CIDR: '10.0.2.0/24'
    PrivateOne:
      CIDR: '10.0.3.0/24'
    PrivateTwo:
      CIDR: '10.0.4.0/24'
    PrivateThree:
      CIDR: '10.0.5.0/24'

Outputs:
  DefaultInternetConnectivitySecurityGroupId:
    Description: The ID of the Internet connectivity security groups
    Export:
      Name:
        Fn::Sub: ${Environment}-private-connectivity-security-group
    Value:
      Ref: DefaultInternetConnectivitySecurityGroup

  PrivateRouteTableId:
    Description: The ID of the Private Route Table
    Export:
      Name:
        Fn::Sub: ${Environment}-private-route-table
    Value:
      Ref: PrivateRouteTable

  PrivateSubnet1a:
    Description: The ID of the Private Subnet 1a
    Export:
      Name:
        Fn::Sub: ${Environment}-private-subnet-1a
    Value:
      Ref: PrivateSubnet1a

  PrivateSubnet1b:
    Description: The ID of the Private Subnet 1b
    Export:
      Name:
        Fn::Sub: ${Environment}-private-subnet-1b
    Value:
      Ref: PrivateSubnet1b

  PrivateSubnet1c:
    Description: The ID of the Private Subnet 1c
    Export:
      Name:
        Fn::Sub: ${Environment}-private-subnet-1c
    Value:
      Ref: PrivateSubnet1c

  PublicRouteTableId:
    Description: The ID of the Public Route Table
    Export:
      Name:
        Fn::Sub: ${Environment}-public-route-table
    Value:
      Ref: PublicRouteTable

  PublicSubnet1a:
    Description: The ID of the Public Subnet 1a
    Export:
      Name:
        Fn::Sub: ${Environment}-public-subnet-1a
    Value:
      Ref: PublicSubnet1a

  PublicSubnet1b:
    Description: The ID of the Public Subnet 1b
    Export:
      Name:
        Fn::Sub: ${Environment}-public-subnet-1b
    Value:
      Ref: PublicSubnet1b

  PublicSubnet1c:
    Description: The ID of the Public Subnet 1c
    Export:
      Name:
        Fn::Sub: ${Environment}-public-subnet-1c
    Value:
      Ref: PublicSubnet1c

  VPC:
    Description: The ID of the main VPC
    Export:
      Name:
        Fn::Sub: ${Environment}-vpc-id
    Value:
      Ref: VPC

Parameters:
  Environment:
    AllowedValues:
      - testing
      - production
    ConstraintDescription: Must be one of the values from the list.
    Description: Environment in which resources are deployed
    Type: String

  CostCenter:
    Description: The Tag used to define the cost center
    Type: String

Resources:
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC

  DefaultInternetConnectivitySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Default Internet connectivity Security Group for EC2 instances
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-default-internet-sg
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter
      VpcId:
        Ref: VPC

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EIP
          - AllocationId
      SubnetId:
        Ref: PublicSubnet1a
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: CostCenter
          Value:
            Ref: CostCenter
        - Key: Environment
          Value:
            Ref: Environment

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGateway
      RouteTableId:
        Ref: PrivateRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter
      VpcId:
        Ref: VPC

  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateOne', 'CIDR']
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter

  PrivateSubnet1aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet1a

  PrivateSubnet1b:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateTwo', 'CIDR']
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter

  PrivateSubnet1bRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet1b

  PrivateSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateThree', 'CIDR']
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter

  PrivateSubnet1cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet1c

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter
      VpcId:
        Ref: VPC

  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicOne', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter

  PublicSubnet1aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1a

  PublicSubnet1b:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicTwo', 'CIDR']
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter

  PublicSubnet1bRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1b

  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicThree', 'CIDR']
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter

  PublicSubnet1cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1c

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap ['SubnetConfig', 'VPC', 'CIDR']
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${Environment}-vpc
        - Key: Environment
          Value:
            Ref: Environment
        - Key: CostCenter
          Value:
            Ref: CostCenter
