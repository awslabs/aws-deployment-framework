# Copyright Amazon.com Inc. or its affiliates.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  ADF CloudFormation Template - Global Base - Cross Account Roles to Allow Access
  to CodePipeline in Deployment Account

Parameters:
  KMSArn:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: ARN of the KMS CMK created in the Deployment account
    Default: /adf/kms_arn

  DeploymentAccountId:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: Deployment Account ID
    Default: /adf/deployment_account_id

  DeploymentAccountBucketName:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: Deployment Bucket Name
    Default: /adf/bucket_name

  ManagementAccountId:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: Management Account ID
    Default: /adf/management_account_id

  BootstrapTemplatesBucketName:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: Bootstrap Templates Bucket Name
    Default: /adf/bootstrap_templates_bucket

Resources:
  CodeCommitRole:
    # This role is used to connect the Pipeline in the deployment account to CodeCommit in
    # In the source account. If you are not using CodeCommit or are using it only for a specific
    # OU you can target this more specifically and remove it from the global.yml
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: "adf-codecommit-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Condition:
              ArnEquals:
                "aws:PrincipalArn": !Sub "arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/adf-codepipeline-role"
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:root
            Action:
              - sts:AssumeRole

  CodeCommitPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "adf-codecommit-role-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "codecommit:BatchGetRepositories"
              - "codecommit:CancelUploadArchive"
              - "codecommit:Get*"
              - "codecommit:GitPull"
              - "codecommit:List*"
              - "codecommit:UploadArchive"
              - "codepipeline:StartPipelineExecution"
              - "events:PutEvents"
            Resource: "*"
          - Effect: Allow
            Action:
              - "s3:PutObject"
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentAccountBucketName}/*
          - Effect: Allow
            Action:
              - "kms:Decrypt"
              - "kms:Encrypt"
              - "kms:GenerateDataKey"
              - "kms:ReEncryptFrom"
              - "kms:ReEncryptTo"
            Resource: !Ref KMSArn
      Roles:
        - !Ref CodeCommitRole

  CloudFormationPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "adf-cloudformation-role-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "CloudFormation"
            Action:
              - cloudformation:ValidateTemplate
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              - codedeploy:CreateDeployment
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              - servicecatalog:CreateProvisioningArtifact
              - servicecatalog:DeleteProvisioningArtifact
              - servicecatalog:DescribeProvisioningArtifact
              - servicecatalog:ListProvisioningArtifacts
              - servicecatalog:UpdateProduct
            Resource: "*"
          - Effect: Allow
            Sid: "PassRole"
            Action:
              - "iam:PassRole"
            Resource:
              - !GetAtt CloudFormationDeploymentRole.Arn
            Condition:
              StringEqualsIfExists:
                "iam:PassedToService":
                  - "cloudformation.amazonaws.com"
      Roles:
        - !Ref CloudFormationRole

  CloudFormationKMSPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "adf-cloudformation-role-policy-kms"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "KMS"
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncryptFrom
              - kms:ReEncryptTo
            Resource: !Ref KMSArn
      Roles:
        - !Ref CloudFormationRole

  CloudFormationPolicyS3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "adf-cloudformation-role-policy-s3"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "S3"
            Action:
              - s3:GetObject*
              - s3:ListBucket
              - s3:PutObject*
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentAccountBucketName}
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentAccountBucketName}/*
      Roles:
        - !Ref CloudFormationRole

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: "adf-cloudformation-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:root
            Condition:
              ArnEquals:
                "aws:PrincipalArn":
                  - !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/adf-codepipeline-role
                  - !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/adf-cloudformation-role
            Action:
              - sts:AssumeRole

  CloudFormationDeploymentPolicy:
    # This is the policy that will be used to deploy CloudFormation resources from
    # within the target account. You should scope this policy depending
    # On what you would like to deploy within certain Organizational Units.
    # NOTE: below is a sample IAM policy. This policies should NOT be used
    # for purposes other than testing.
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "adf-cloudformation-deployment-role-policy-kms"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "KMS"
            Action:
              - "kms:Decrypt"
              - "kms:DescribeKey"
              - "kms:Encrypt"
              - "kms:GenerateDataKey*"
              - "kms:ReEncryptFrom"
              - "kms:ReEncryptTo"
            Resource: !Ref "KMSArn"
      Roles:
        - !Ref CloudFormationDeploymentRole

  CloudFormationDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: "adf-cloudformation-deployment-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "CloudFormation"
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
            Condition:
              StringEqualsIfExists:
                "aws:SourceAccount":
                  - !Ref AWS::AccountId
                  - !Ref DeploymentAccountId

  UpdateCrossAccountAccessByDeploymentAccountRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /adf/bootstrap/
      RoleName: "adf-update-cross-account-access"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "AssumeRoleByEnableCrossAccountLambda"
            Condition:
              ArnEquals:
                "aws:PrincipalArn": !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/adf/bootstrap/adf-bootstrap-pipeline-enable-cross-account-access-role
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:root
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: "adf-pipeline-allow-updating-cross-accounts"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:GetRolePolicy"
                  - "iam:PutRolePolicy"
                Resource:
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-cloudformation-deployment-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-cloudformation-role"

  AdfAutomationRole:
    # This role is used by CodeBuild on the Deployment Account when creating
    # new CodePipeline Pipelines.
    # This role is not assumed by CodeBuild in any other pipeline other
    # than 'aws-deployment-framework-pipelines'
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: "adf-automation-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "AssumeRole"
            Condition:
              ArnEquals:
                "aws:PrincipalArn":
                  - !Sub "arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/adf/pipeline-management/adf-pipeline-management-create-update-rule"
                  - !Sub "arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/adf/pipeline-management/adf-pipeline-management-create-repository"
            Principal:
              AWS:
                - !Sub "arn:${AWS::Partition}:iam::${DeploymentAccountId}:root"
            Action:
              - sts:AssumeRole

  AdfAutomationRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "adf-automation-role-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "S3"
            Action:
              - s3:Get*
              - s3:List*
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${DeploymentAccountBucketName}/adf-build/templates/*"
          - Effect: Allow
            Sid: "CloudFormation"
            Action:
              - "cloudformation:CancelUpdateStack"
              - "cloudformation:ContinueUpdateRollback"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:CreateStack"
              - "cloudformation:DeleteChangeSet"
              - "cloudformation:DeleteStack"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:DescribeStacks"
              - "cloudformation:ExecuteChangeSet"
              - "cloudformation:SetStackPolicy"
              - "cloudformation:SignalResource"
              - "cloudformation:UpdateStack"
              - "cloudformation:UpdateTerminationProtection"
            Resource:
              - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/adf-codecommit-*/*"
              - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/adf-event-rule-${AWS::AccountId}-*/*"
          - Effect: Allow
            Sid: "CodeCommit"
            Action:
              - "codecommit:CreateRepository"
              - "codecommit:UpdateRepositoryDescription"
              - "codecommit:PutRepositoryTriggers"
              - "codecommit:GetRepository"
              - "codecommit:TagResource"
              - "codecommit:UntagResource"
            Resource:
              - "*"
          - Effect: Allow
            Sid: "Events"
            Action:
              - "events:DescribeRule"
              - "events:EnableRule"
              - "events:ListRules"
              - "events:PutEvents"
              - "events:PutRule"
              - "events:PutTargets"
              - "cloudformation:ValidateTemplate"
            Resource:
              - "*"
          - Effect: Allow
            Sid: "SSM"
            Action:
              - "ssm:GetParameters"
              - "ssm:GetParameter"
            Resource:
              - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/adf/bucket_name"
              - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/adf/deployment_account_id"
              - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/adf/kms_arn"
          - Effect: Allow
            Sid: "IAMCleanupV3LegacyRoles"
            Action:
              - "iam:DeleteRole"
              - "iam:DeleteRolePolicy"
            Resource:
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-event-rule-${AWS::AccountId}-${DeploymentAccountId}-EventRole-*"
          - Effect: Allow
            Sid: "IAMFullPathOnly"
            Action:
              - "iam:CreateRole"
              - "iam:DeleteRole"
              - "iam:TagRole"
              - "iam:UntagRole"
            Resource:
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf/cross-account-events/adf-cc-event-from-${AWS::AccountId}-to-${DeploymentAccountId}"
          - Effect: Allow
            Sid: "IAMFullPathAndNameOnly"
            Action:
              - "iam:DeleteRolePolicy"
              - "iam:GetRole"
              - "iam:GetRolePolicy"
              - "iam:PutRolePolicy"
            Resource:
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf/cross-account-events/adf-cc-event-from-${AWS::AccountId}-to-${DeploymentAccountId}"
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-cc-event-from-${AWS::AccountId}-to-${DeploymentAccountId}"
          - Effect: Allow
            Sid: "IAMPassRole"
            Action:
              - "iam:PassRole"
            Resource:
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf/cross-account-events/adf-cc-event-from-${AWS::AccountId}-to-${DeploymentAccountId}"
            Condition:
              StringEquals:
                'iam:PassedToService':
                  - "events.amazonaws.com"
              ArnEquals:
                'iam:AssociatedResourceArn':
                  - !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/adf-cc-event-from-${AWS::AccountId}-to-${DeploymentAccountId}"
          - Effect: Allow
            Sid: "KMS"
            Action:
              # These are required for cross account deployments via CodePipeline.
              - "kms:Decrypt"
              - "kms:DescribeKey"
            Resource: !Ref KMSArn
      Roles:
        - !Ref AdfAutomationRole

  ReadOnlyAutomationRole:
    # This role is used by CodeBuild on the Deployment Account for each
    # of the deployment pipelines to gather information from other accounts.
    # For example, certain intrinsic functions (resolve/import) allow
    # fetching/reading data from other accounts CloudFormation stacks
    # and Parameter Store values. This is the role that will be assumed
    # in order to facilitate this scenario.
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: "adf-readonly-automation-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "AssumeRole"
            Condition:
              ArnEquals:
                "aws:PrincipalArn": !Sub "arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/adf-codebuild-role"
            Principal:
              AWS:
                - !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:root
            Action:
              - sts:AssumeRole

  ReadOnlyAutomationRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "adf-readonly-automation-role-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "CloudFormation"
            Action:
              - "ssm:GetParameter"
              - "ssm:GetParameters"
              - "cloudformation:DescribeStacks"
              - "cloudformation:ValidateTemplate"
            Resource:
              - "*"
      Roles:
        - !Ref ReadOnlyAutomationRole

  BootstrapTestRole:
    # This role is used to test whether the AWS Account is bootstrapped or not.
    # Do not attach any policies to this role.
    Type: AWS::IAM::Role
    Properties:
      Path: /adf/bootstrap/
      RoleName: "adf-bootstrap-test-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Condition:
              ArnEquals:
                "aws:PrincipalArn": !Sub "arn:${AWS::Partition}:iam::${ManagementAccountId}:role/adf/account-bootstrapping/jump-manager/adf-bootstrapping-jump-manager-role"
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${ManagementAccountId}:root"
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: "lock-down-for-assumerole-test-only"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Deny
                Action: "*"
                Resource: "*"

  BootstrapUpdateDeploymentRole:
    # This role is used to test whether the AWS Account is bootstrapped or not.
    # Do not attach any policies to this role.
    Type: AWS::IAM::Role
    Properties:
      Path: /adf/bootstrap/
      RoleName: "adf-bootstrap-update-deployment-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Condition:
              ArnEquals:
                "aws:PrincipalArn": !Sub "arn:${AWS::Partition}:iam::${ManagementAccountId}:role/adf/account-bootstrapping/jump/adf-bootstrapping-cross-account-jump-role"
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${ManagementAccountId}:root"
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: "allow-updates-to-bootstrap-stacks"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudformation:CancelUpdateStack"
                  - "cloudformation:ContinueUpdateRollback"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:SignalResource"
                  - "cloudformation:UpdateTerminationProtection"
                Resource:
                  # Across all regions, as it needs to be able to find and
                  # cleanup global stacks in non-global regions:
                  - !Sub "arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/adf-global-base-*/*"
                  - !Sub "arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/adf-regional-base-*/*"
              - Effect: "Allow"
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:CreateStack"
                  - "cloudformation:CreateUploadBucket"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:TagResource"
                  - "cloudformation:UntagResource"
                  - "cloudformation:UpdateStack"
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/adf-global-base-bootstrap/*"
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/adf-global-base-iam/*"
                  - !Sub "arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/adf-regional-base-bootstrap/*"
              - Effect: "Allow"
                Action:
                  - "cloudformation:ListStacks"
                  - "cloudformation:ValidateTemplate"
                  - "ec2:DeleteInternetGateway"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:DeleteRouteTable"
                  - "ec2:DeleteSubnet"
                  - "ec2:DeleteVpc"
                  - "ec2:DescribeInternetGateways"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DescribeRegions"
                  - "ec2:DescribeRouteTables"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVpcs"
                  - "iam:CreateAccountAlias"
                  - "iam:DeleteAccountAlias"
                  - "iam:ListAccountAliases"
                Resource:
                  - "*"
              - Effect: "Allow"
                Action:
                  - "ssm:GetParameters"
                  - "ssm:GetParameter"
                  - "ssm:PutParameter"
                Resource:
                  - !Sub "arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/adf/*"
              - Effect: "Allow"
                Action:
                  - "iam:CreateRole"
                  - "iam:DeleteRole"
                  - "iam:TagRole"
                  - "iam:UntagRole"
                Resource:
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-cloudformation-deployment-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-cloudformation-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-codecommit-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-readonly-automation-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-terraform-role"
              - Effect: "Allow"
                Action:
                  - "iam:DeleteRolePolicy"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:PutRolePolicy"
                  - "iam:UpdateAssumeRolePolicy"
                Resource:
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-cloudformation-deployment-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-cloudformation-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-codecommit-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-readonly-automation-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-terraform-role"
              - Sid: "IAMGetOnly"
                Effect: "Allow"
                Action:
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                Resource:
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-automation-role"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-bootstrap-*"
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf/bootstrap/*"
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${BootstrapTemplatesBucketName}/adf-bootstrap/*"
