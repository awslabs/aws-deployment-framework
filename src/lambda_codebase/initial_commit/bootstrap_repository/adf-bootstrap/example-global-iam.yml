# // Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# // SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: "2010-09-09"
Description: ADF CloudFormation Template (Global) for IAM in the Target Accounts

Parameters:
  DeploymentAccountId:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: Deployment Account ID
    Default: deployment_account_id

Resources:
  CloudFormationDeploymentPolicy:
    # This is the policy that will be used to deploy CloudFormation resources from
    # within the target account. You should scope this policy depending
    # On what you would like to deploy within certain Organizational Units.
    # NOTE: below is a sample IAM policy. This policies should NOT be used for
    # purposes other than testing.
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "custom-adf-cloudformation-deployment-role-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "CloudFormation"
            Action:
              # These below actions are examples, change these to your requirements..
              - "apigateway:*"
              - "cloudformation:*"  # You will need CloudFormation actions in order to work with CloudFormation
              - "ecr:*"
              - "ecs:*"
              - "ec2:*"
              - "iam:*"
              - "logs:*"
              - "s3:*"
              - "codedeploy:*"
              - "autoscaling:*"
              - "cloudwatch:*"
              - "elasticloadbalancing:*"
            Resource:
              - "*"
      Roles:
        # This role is created in the global.yml and is the default
        # CloudFormation deployment role for ADF.
        - adf-cloudformation-deployment-role

# ADFTerraformRole:
#   # This is the role that will be used to deploy Terraform resources from within
#   # the target account. You should scope this policy depending on what you would
#   # like to deploy within certain Organizational Units.
#   # NOTE: below is a sample IAM policy. This policies should NOT be used for purposes other than testing.
#   # Uncomment this line if you want to enable the terraform extensions
#   Type: AWS::IAM::Role
#   Properties:
#     RoleName: "adf-terraform-role"
#     AssumeRolePolicyDocument:
#       Version: "2012-10-17"
#       Statement:
#         - Effect: Allow
#           Sid: "AssumeRole"
#           Condition:
#             ArnEquals:
#               'aws:PrincipalArn':
#                 # This would allow all CodeBuild projects to be able to assume this role
#                 - !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/adf-codebuild-role
#           Principal:
#             AWS: !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:root
#           Action:
#             - sts:AssumeRole
#     Path: /
#
# ADFTerraformPolicy:
#   Type: AWS::IAM::Policy
#   Properties:
#     PolicyName: "adf-terraform-policy"
#     PolicyDocument:
#       Version: "2012-10-17"
#       Statement:
#         - Effect: Allow
#           Action:
#             - "events:PutRule"
#             - "events:PutTargets"
#             - "events:DeleteRule"
#             - "events:DescribeRule"
#             - "events:ListTagsForResource"
#             - "events:ListTargetsByRule"
#             - "events:RemoveTargets"
#             - "sns:CreateTopic"
#             - "sns:GetTopicAttributes"
#             - "sns:SetTopicAttributes"
#             - "sns:ListTagsForResource"
#             - "sns:DeleteTopic"
#           Resource:
#             - "*"
#     Roles:
#       - !Ref ADFTerraformRole

# MyExampleCustomRole:
#   # Am example custom role that you would need to create in order to deploy custom resources in other AWS Accounts within the organization.
#   Type: AWS::IAM::Role
#   Properties:
#     RoleName: "adf-custom-deploy-role"
#     AssumeRolePolicyDocument:
#       Version: "2012-10-17"
#       Statement:
#         - Effect: Allow
#           Sid: "AssumeRole"
#           Condition:
#             ArnEquals:
#               'aws:PrincipalArn':
#                 # This would allow all CodeBuild projects to be able to assume this role
#                 # - !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/adf-codebuild-role
#                 - !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:role/my-custom-codebuild-role
#                 # The above role would be created on the deployment account
#                 # for the purpose deploying this custom resource via CodeBuild
#           Principal:
#             AWS: !Sub arn:${AWS::Partition}:iam::${DeploymentAccountId}:root
#           Action:
#             - sts:AssumeRole
#     Path: /
#
# MyExampleCustomRolePolicy:
#   Type: AWS::IAM::Policy
#   Properties:
#     PolicyName: "adf-custom-deploy-role-policy"
#     PolicyDocument:
#       Version: "2012-10-17"
#       Statement:
#         - Effect: Allow
#           Action:
#             - "ec2:*"
#             - "s3:*"
#           Resource:
#             - "*"
#     Roles:
#       - !Ref MyExampleCustomRole

Outputs:
  DeploymentAccountId:
    Value: !Ref DeploymentAccountId
