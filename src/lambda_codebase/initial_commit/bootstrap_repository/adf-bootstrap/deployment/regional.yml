# Copyright Amazon.com Inc. or its affiliates.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: "2010-09-09"
Description: ADF CloudFormation Template (Regional) for Deployment Account

Parameters:
  OrganizationId:
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: /adf/organization_id

  ADFTerraformExtension:
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: /adf/extensions/terraform/enabled

Conditions:
  ADFTerraformExtensionEnabled:
    !Equals [!Ref ADFTerraformExtension, "True"]

Resources:
  DeploymentFrameworkRegionalS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  DeploymentFrameworkRegionalPipelineBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref "DeploymentFrameworkRegionalS3Bucket"
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref OrganizationId
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}/*
            Principal:
              AWS: "*"
          - Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObject
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}/*
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/adf-cloudformation-role
          - Sid: "DenyUnencryptedObjects"
            Action:
              - "s3:PutObject"
            Effect: Deny
            Condition:
              StringNotEquals:
                "s3:x-amz-server-side-encryption": "aws:kms"
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}/*
            Principal:
              AWS: "*"
          - Sid: "DenyDifferentKMSKey"
            Action:
              - "s3:PutObject"
            Effect: Deny
            Condition:
              ArnNotEqualsIfExists:
                "s3:x-amz-server-side-encryption-aws-kms-key-id": !GetAtt DeploymentFrameworkRegionalKMSKey.Arn
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}/*
            Principal:
              AWS: "*"
          - Sid: "DenyInsecureConnections"
            Action:
              - "s3:*"
            Effect: Deny
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}/*
            Principal:
              AWS: "*"
          - Sid: "DenyInsecureTLS"
            Action:
              - "s3:*"
            Effect: Deny
            Condition:
              NumericLessThan:
                "s3:TlsVersion": "1.2"
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}
              - !Sub arn:${AWS::Partition}:s3:::${DeploymentFrameworkRegionalS3Bucket}/*
            Principal:
              AWS: "*"

  DeploymentFrameworkRegionalKMSKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Description: Used by Assumed Roles in Accounts accounts to Encrypt/Decrypt code
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          - Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action:
              - "kms:CancelKeyDeletion"
              - "kms:Create*"
              - "kms:Decrypt"
              - "kms:Delete*"
              - "kms:Describe*"
              - "kms:DescribeKey"
              - "kms:Disable*"
              - "kms:Enable*"
              - "kms:Encrypt"
              - "kms:GenerateDataKey*"
              - "kms:Get*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:ReEncrypt*"
              - "kms:Revoke*"
              - "kms:ScheduleKeyDeletion"
              - "kms:Update*"
            Resource: "*"
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - kms:Decrypt
              - kms:DescribeKey
            Resource: "*"
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref OrganizationId

  TerraformLockTable:
    Condition: ADFTerraformExtensionEnabled
    Type: "AWS::DynamoDB::Table"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      TableName: adf-tflocktable

Outputs:
  DeploymentFrameworkRegionalS3Bucket:
    Description: The S3 Bucket used for cross-region CodePipeline deployments
    Value: !Ref DeploymentFrameworkRegionalS3Bucket
    Export:
      Name: !Sub "S3Bucket-${AWS::Region}"

  DeploymentFrameworkRegionalKMSKey:
    Description: The KMS Key used for cross-region CodePipeline deployments
    Value: !GetAtt DeploymentFrameworkRegionalKMSKey.Arn
    Export:
      Name: !Sub "KMSArn-${AWS::Region}"
